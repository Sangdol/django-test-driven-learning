"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, Iterator, List, Optional, TYPE_CHECKING, Tuple
from django.urls import URLPattern
from ninja.types import TCallable
from ninja import NinjaAPI

if TYPE_CHECKING:
    ...
__all__ = ["Router"]
class Router:
    def __init__(self, *, auth: Any = ..., tags: Optional[List[str]] = ...) -> None:
        ...
    
    def get(self, path: str, *, auth: Any = ..., response: Any = ..., operation_id: Optional[str] = ..., summary: Optional[str] = ..., description: Optional[str] = ..., tags: Optional[List[str]] = ..., deprecated: Optional[bool] = ..., by_alias: bool = ..., exclude_unset: bool = ..., exclude_defaults: bool = ..., exclude_none: bool = ..., url_name: Optional[str] = ..., include_in_schema: bool = ...) -> Callable[[TCallable], TCallable]:
        ...
    
    def post(self, path: str, *, auth: Any = ..., response: Any = ..., operation_id: Optional[str] = ..., summary: Optional[str] = ..., description: Optional[str] = ..., tags: Optional[List[str]] = ..., deprecated: Optional[bool] = ..., by_alias: bool = ..., exclude_unset: bool = ..., exclude_defaults: bool = ..., exclude_none: bool = ..., url_name: Optional[str] = ..., include_in_schema: bool = ...) -> Callable[[TCallable], TCallable]:
        ...
    
    def delete(self, path: str, *, auth: Any = ..., response: Any = ..., operation_id: Optional[str] = ..., summary: Optional[str] = ..., description: Optional[str] = ..., tags: Optional[List[str]] = ..., deprecated: Optional[bool] = ..., by_alias: bool = ..., exclude_unset: bool = ..., exclude_defaults: bool = ..., exclude_none: bool = ..., url_name: Optional[str] = ..., include_in_schema: bool = ...) -> Callable[[TCallable], TCallable]:
        ...
    
    def patch(self, path: str, *, auth: Any = ..., response: Any = ..., operation_id: Optional[str] = ..., summary: Optional[str] = ..., description: Optional[str] = ..., tags: Optional[List[str]] = ..., deprecated: Optional[bool] = ..., by_alias: bool = ..., exclude_unset: bool = ..., exclude_defaults: bool = ..., exclude_none: bool = ..., url_name: Optional[str] = ..., include_in_schema: bool = ...) -> Callable[[TCallable], TCallable]:
        ...
    
    def put(self, path: str, *, auth: Any = ..., response: Any = ..., operation_id: Optional[str] = ..., summary: Optional[str] = ..., description: Optional[str] = ..., tags: Optional[List[str]] = ..., deprecated: Optional[bool] = ..., by_alias: bool = ..., exclude_unset: bool = ..., exclude_defaults: bool = ..., exclude_none: bool = ..., url_name: Optional[str] = ..., include_in_schema: bool = ...) -> Callable[[TCallable], TCallable]:
        ...
    
    def api_operation(self, methods: List[str], path: str, *, auth: Any = ..., response: Any = ..., operation_id: Optional[str] = ..., summary: Optional[str] = ..., description: Optional[str] = ..., tags: Optional[List[str]] = ..., deprecated: Optional[bool] = ..., by_alias: bool = ..., exclude_unset: bool = ..., exclude_defaults: bool = ..., exclude_none: bool = ..., url_name: Optional[str] = ..., include_in_schema: bool = ...) -> Callable[[TCallable], TCallable]:
        ...
    
    def add_api_operation(self, path: str, methods: List[str], view_func: Callable, *, auth: Any = ..., response: Any = ..., operation_id: Optional[str] = ..., summary: Optional[str] = ..., description: Optional[str] = ..., tags: Optional[List[str]] = ..., deprecated: Optional[bool] = ..., by_alias: bool = ..., exclude_unset: bool = ..., exclude_defaults: bool = ..., exclude_none: bool = ..., url_name: Optional[str] = ..., include_in_schema: bool = ...) -> None:
        ...
    
    def set_api_instance(self, api: NinjaAPI, parent_router: Optional[Router] = ...) -> None:
        ...
    
    def urls_paths(self, prefix: str) -> Iterator[URLPattern]:
        ...
    
    def add_router(self, prefix: str, router: Router, *, auth: Any = ..., tags: Optional[List[str]] = ...) -> None:
        ...
    
    def build_routers(self, prefix: str) -> List[Tuple[str, Router]]:
        ...
    


