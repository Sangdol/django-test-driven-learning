"""
This type stub file was generated by pyright.
"""

import inspect
from typing import Any, Callable, Set
from ninja.types import DictStrAny

__all__ = ["get_typed_signature", "get_typed_annotation", "make_forwardref", "get_path_param_names", "is_async"]
def get_typed_signature(call: Callable) -> inspect.Signature:
    "Finds call signature and resolves all forwardrefs"
    ...

def get_typed_annotation(param: inspect.Parameter, globalns: DictStrAny) -> Any:
    ...

def make_forwardref(annotation: str, globalns: DictStrAny) -> Any:
    ...

def get_path_param_names(path: str) -> Set[str]:
    """turns path string like /foo/{var}/path/{int:another}/end to set {'var', 'another'}"""
    ...

def is_async(callable: Callable) -> bool:
    ...

class NinjaUUIDConverter:
    """Return a path converted UUID as a str instead of the standard UUID"""
    regex = ...
    def to_python(self, value: str) -> str:
        ...
    
    def to_url(self, value: Any) -> str:
        ...
    


